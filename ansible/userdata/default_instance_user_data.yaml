#cloud-config

coreos:
  update:
    reboot-strategy: best-effort
  etcd:
    discovery: {{token}}
    addr: $private_ipv4:4001
    peer-addr: $private_ipv4:7001
    # give etcd more time if it's under heavy load - prevent leader election thrashing
    peer-election-timeout: 2000
    # heartbeat interval should ideally be 1/4 or 1/5 of peer election timeout
    peer-heartbeat-interval: 500
  fleet:
    # allow etcd to slow down at times
    etcd_request_timeout: 3.0
    metadata: host_type=persistent
  units:
    - name: etcd.service
      command: start
    - name: fleet.service
      command: start
    - name: key-register.service
      command: start
      content: |
          [Unit]
          Description=Add secret keys to etcd
          After=etcd.service

          [Service]
          Type=oneshot
          ExecStartPre=/bin/sh -c "sleep 5"
          ExecStart=/bin/sh -c "etcdctl set /ft/_credentials/aws/aws_access_key_id {{ aws_access_key_id }};"
          ExecStart=/bin/sh -c "etcdctl set /ft/_credentials/aws/aws_secret_access_key {{ aws_secret_access_key }};"
          ExecStart=/bin/sh -c "etcdctl set /ft/_credentials/elb_name coreos-registry-{{cp.msg}};"
          ExecStart=/bin/sh -c "etcdctl set /ft/_credentials/aws/s3_bucket com.ft.coco-docker-registry;"
    - name: deploy-deployer.service
      command: start
      content: |
          [Unit]
          Description=Deploy the deployer
          After=fleet.service

          [Service]
          ExecStart=/bin/sh -c "curl {{deployer_service_file_location}} > /tmp/deployer.service; fleetctl start /tmp/deployer.service "
write_files:
  - path: /etc/systemd/system/fleet.socket.d/30-ListenStream.conf
    content: |
      [Socket]
      ListenStream=0.0.0.0:49153
{% include 'ssh_authorized_keys.yaml' %}
