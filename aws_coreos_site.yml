- hosts: localhost
  connection: local

  vars:
    region: eu-west-1
    ami: ami-5f2f5528
  vars_files:
    - keys.yaml

  tasks:
    - debug: msg="{{ token | regex_replace('^https?:\\/\\/[\\w\\.]*\\/([\\w]{12})[\\w]*$', '\\1') }}"
      register:  cp

    - name: Set up fleet security group (this is a dup of the cluster SG)
      ec2_group:
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        region: "{{region}}"
        name: fleet_sg
        description: Fleet secutiy group
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 0
            to_port: 65535
            cidr_ip: 172.31.0.0/16
        rules_egress:
          - proto: tcp
            from_port: 0
            to_port: 65535
            cidr_ip: 0.0.0.0/0
      register: registry_sg

    - s3:
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        region: "{{region}}"
        bucket: "coco-docker-registry"
        object: "/registry"
        mode: "create"

    - name: Registry ELB
      ec2_elb_lb:
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        region: "{{region}}"
        name: "registry-elb"
        state: present
        security_group_ids: '{{registry_sg.group_id}}'
        zones:
          - eu-west-1a
          - eu-west-1b
          - eu-west-1c
        listeners:
          - protocol: http
            load_balancer_port: 80
            instance_port: 80
        purge_listeners: True
        health_check:
          ping_protocol: tcp # options are http, https, ssl, tcp
          ping_port: 80
          #ping_path: "/index.html" # not required for tcp or ssl
          response_timeout: 5 # seconds
          interval: 30 # seconds
          unhealthy_threshold: 2
          healthy_threshold: 10

    - name: Provision m3.medium instances
      ec2:
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        region: "{{region}}"
        zone: eu-west-1a
        group: registry_sg
        image: "{{ami}}"
        instance_type: m3.medium
        wait: true
        exact_count: 1
        user_data: "{{ lookup('template', 'userdata/default_instance_user_data.yaml') }}"
        volumes:
          - device_name: /dev/xvda
            volume_size: 20
        count_tag:
          Name: "{{cp.msg}}_fleet_default"
        instance_tags:
          Name: "{{cp.msg}}_fleet_default"
      register: ec2_small

    - debug: msg="ec2_small ips {{ item.public_ip }}"
      with_items: "{{ ec2_small.tagged_instances }}"
