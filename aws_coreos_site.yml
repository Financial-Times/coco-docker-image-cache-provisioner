- hosts: localhost
  connection: local

  vars:
    region: eu-west-1
    ami: ami-5f2f5528
  vars_files:
    - keys.yaml

  tasks:
    - debug: msg="{{ token | regex_replace('^https?:\\/\\/[\\w\\.]*\\/([\\w]*)$', '\\1') }}"
      register:  cp

    - name: Set up fleet security group
      ec2_group:
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        region: "{{region}}"
        name: fleet_mirror_sg
        description: Fleet secutiy group
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 0
            to_port: 65535
            cidr_ip: 172.31.0.0/16
        rules_egress:
          - proto: tcp
            from_port: 0
            to_port: 65535
            cidr_ip: 0.0.0.0/0
      register: fleet_mirror_sg

    - name: Mirror ELB
      ec2_elb_lb:
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        region: "{{region}}"
        name: "fleet-mirror-elb"
        state: present
        security_group_ids: '{{fleet_mirror_sg.id}}'
        zones:
          - eu-west-1a
        listeners:
          - protocol: http
            load_balancer_port: 80
            instance_port: 8080
        purge_listeners: True
        health_check:
          ping_protocol: tcp # options are http, https, ssl, tcp
          ping_port: 8080
          #ping_path: "/index.html" # not required for tcp or ssl
          response_timeout: 5 # seconds
          interval: 30 # seconds
          unhealthy_threshold: 2
          healthy_threshold: 10

    - name: Provision m3.medium instances
      ec2:
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        region: "{{region}}"
        zone: eu-west-1a
        group: fleet_mirror_sg
        image: "{{ami}}"
        instance_type: m3.medium
        wait: true
        exact_count: 1
        user_data: "{{ lookup('template', 'userdata/default_instance_user_data.yaml') }}"
        volumes:
          - device_name: /dev/xvda
            volume_size: 20
          - device_name: /dev/xvdf
            volume_size: 50
        count_tag:
          Name: "{{cp.msg}}_fleet_default"
        instance_tags:
          Name: "{{cp.msg}}_fleet_default"
      register: ec2_small

    - debug: msg="ec2_small ips {{ item.public_ip }}"
      with_items: "{{ ec2_small.tagged_instances }}"

    - name: Defualt Instance Register
      local_action:
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        region: "{{region}}"
        module: ec2_elb
        instance_id: "{{ item.id }}"
        ec2_elbs: "fleet-mirror-elb"
        state: 'present'
      with_items: "{{ ec2_small.tagged_instances }}"

